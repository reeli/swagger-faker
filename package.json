{
  "name": "swagger-faker",
  "version": "2.0.0",
  "description": "Generate fake data from swagger",
  "bin": {
    "swagger-faker": "bin/cli.js"
  },
  "main": "dist/lib/index.js",
  "module": "dist/module/index.js",
  "types": "src/index.ts",
  "files": [
    "lib",
    "module",
    "src",
    "README.md"
  ],
  "scripts": {
    "start": "ts-node src/cli/index.ts run",
    "mock": "npx json-server --watch mock-server/db.js --middlewares mock-server/middlewares/*.js",
    "test": "jest",
    "build": "rm -rf dist/ && tsc",
    "release": "rm -rf lib/ && rm -rf module/ && rollup -c rollup.config.ts",
    "prepare": "npm run release && npm test"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:reeli/swagger-faker.git"
  },
  "author": "",
  "license": "MIT",
  "bugs": {
    "url": "git@github.com:reeli/swagger-faker.git"
  },
  "homepage": "git@github.com:reeli/swagger-faker.git",
  "devDependencies": {
    "@babel/core": "^7.14.6",
    "@babel/parser": "^7.14.7",
    "@babel/preset-env": "^7.14.7",
    "@babel/preset-typescript": "^7.14.5",
    "@babel/traverse": "^7.14.7",
    "@babel/types": "^7.14.5",
    "@rollup/plugin-babel": "^5.3.0",
    "@rollup/plugin-typescript": "^8.2.3",
    "@types/axios": "0.14.0",
    "@types/faker": "^5.5.7",
    "@types/jest": "24.0.18",
    "@types/lodash": "4.14.138",
    "@types/node": "12.7.5",
    "@types/path-to-regexp": "^1.7.0",
    "@types/prettier": "1.18.2",
    "@types/rollup": "0.54.x",
    "@types/swagger-schema-official": "^2.0.22",
    "babel-jest": "24.9.0",
    "babel-plugin-pure-calls-annotation": "0.2.x",
    "jest": "^26.6.3",
    "rollup": "^2.53.2",
    "ts-node": "8.4.1",
    "tslib": "^2.3.0",
    "typescript": "^4.3.5"
  },
  "dependencies": {
    "@changesets/cli": "^2.16.0",
    "axios": "^0.21.1",
    "commander": "^7.2.x",
    "faker": "^5.5.3",
    "json-server": "^0.16.3",
    "lodash": "^4.17.15",
    "path-to-regexp": "^6.2.0",
    "prettier": "^2.3.2",
    "swagger2openapi": "^7.0.5"
  },
  "jest": {
    "testEnvironment": "node",
    "coverageDirectory": "coverage",
    "testRegex": ".*/__tests__/.+\\.(generator|test|spec)\\.(ts|tsx)$",
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.{ts,tsx}",
      "!__types__/**",
      "!src/__tests__/**"
    ]
  }
}
